class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int n = graph.size();
        vector<vector<int>> e(n);
        for (int i=0; i<n; ++i)
            for (int j=0; j<n; ++j)
                if (graph[i][j])
                    e[i].push_back(j);
        
        int mal=n+1, ans=n;
        vector<int> vis(n);
        for (auto del : initial) {
            queue<int> q;
            fill(vis.begin(), vis.end(), false);
            for (auto init: initial) {
                if (init != del)
                    q.push(init);
                vis[init] = true;
            }

            while (!q.empty()) {
                int u = q.front(); q.pop();
                for (auto v : e[u])
                    if (!vis[v]) {
                        vis[v] = true;
                        q.push(v);
                    }
            }
            
            int infected = count_if(vis.begin(), vis.end(), [](int vis){ return vis; });

            if (infected<mal || infected==mal && del<ans) {
                mal = infected;
                ans = del;
            }
        }
        return ans;
    }
};